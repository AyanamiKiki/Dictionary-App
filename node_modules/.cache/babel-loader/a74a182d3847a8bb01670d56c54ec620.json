{"ast":null,"code":"var _jsxFileName = \"/Users/anika/Desktop/stuff/kodowanko/Dictionary-App/src/Results.js\";\nimport React from \"react\";\nimport Meaning from \"./Meaning\";\nimport Phonetic from \"./Phonetic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Results(props) {\n  if (props.results) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.results.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this), props.results.phonetics.map(function (phonetic, index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Phonetic, {\n            phonetic: phonetic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 23\n          }, this)\n        }, \"index\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 19\n        }, this);\n      }), props.results.meanings.map(function (meaning, index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Meaning, {\n            meaning: meaning\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this);\n  } else {\n    return null;\n  }\n}\n_c = Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["/Users/anika/Desktop/stuff/kodowanko/Dictionary-App/src/Results.js"],"names":["React","Meaning","Phonetic","Results","props","results","word","phonetics","map","phonetic","index","meanings","meaning"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;AAClC,MAAIA,KAAK,CAACC,OAAV,EAAkB;AACf,wBACC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAA,kBACKD,KAAK,CAACC,OAAN,CAAcC;AADnB;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKF,KAAK,CAACC,OAAN,CAAcE,SAAd,CAAwBC,GAAxB,CAA4B,UAASC,QAAT,EAAmBC,KAAnB,EAAyB;AACpD,4BACI;AAAA,iCACI,QAAC,QAAD;AAAU,YAAA,QAAQ,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ,WAAS,OAAT;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKD,OANA,CAJL,EAWKL,KAAK,CAACC,OAAN,CAAcM,QAAd,CAAuBH,GAAvB,CAA2B,UAASI,OAAT,EAAkBF,KAAlB,EAC5B;AAAC,4BAAO;AAAA,iCACJ,QAAC,OAAD;AAAS,YAAA,OAAO,EAAEE;AAAlB;AAAA;AAAA;AAAA;AAAA;AADI,WAAUF,KAAV;AAAA;AAAA;AAAA;AAAA,gBAAP;AAGA,OAJA,CAXL;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAkBC,GAnBJ,MAmBY;AACR,WAAO,IAAP;AACH;AACJ;KAvBuBP,O","sourcesContent":["import React from \"react\";\nimport Meaning from \"./Meaning\";\nimport Phonetic from \"./Phonetic\";\n\nexport default function Results(props){\n    if (props.results){\n       return (\n        <div className=\"Results\">\n            <h2>\n                {props.results.word}\n            </h2>\n            {props.results.phonetics.map(function(phonetic, index){\n              return (\n                  <div key=\"index\">\n                      <Phonetic phonetic={phonetic}/>\n                  </div>\n              )  \n            })}\n            {props.results.meanings.map(function(meaning, index)\n            {return <div key={index}>\n                <Meaning meaning={meaning} />\n            </div>\n            })}\n        </div>\n    ); }   else {\n        return null;\n    }\n}"]},"metadata":{},"sourceType":"module"}